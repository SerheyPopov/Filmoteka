{"version":3,"file":"static/js/112.0debea2c.chunk.js","mappings":"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","sources":["components/PersonList/PersonList.styled.js","components/PersonList/PersonList.jsx","Pages/People.jsx","components/Api/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const A = styled(Link)`\n  text-decoration: none;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n`;\n\nexport const Item = styled.li`\n  width: 300px;\n  margin-right: auto;\n  margin-left: auto;\n//   border: 1px solid black;\n  margin-bottom: 20px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n      transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n      border-radius: 5px;\n  &:hover {\n    transform: scale(1.03);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n    \n`;\nexport const Img = styled.img`\n  display: block;\n`;\n\nexport const P = styled.p`\n  font-size: x-large;\n  font-weight: 700;\n  color: #656565;\n`;\n\nexport const Container = styled.div`\n  height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n  background-color: #f9f7f7;\n`;\n","import { List, Item, A, Img, P, Container } from './PersonList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst PersonList = prop => {\n  const location = useLocation();\n  const imgURL = 'https://image.tmdb.org/t/p/w500';\n  const person = prop.person;\n  return (\n    <List>\n      {person &&\n        person.map(({ id, profile_path, name }) => (\n          <Item key={id}>\n            <A to={`/person/${id}`} state={{ from: location }}>\n              <Img\n                src={\n                  profile_path\n                    ? profile_path && imgURL + profile_path\n                    : 'https://svgsilh.com/svg/24530-4f4f4f.svg'\n                }\n                alt={name}\n                width={300}\n              />\n              <Container>\n                <P>{name}</P>\n              </Container>\n            </A>\n          </Item>\n        ))}\n    </List>\n  );\n};\n\nexport default PersonList;\n","import { useEffect, useState } from 'react';\nimport PersonList from '../components/PersonList/PersonList';\nimport { TrendPerson } from '../components/Api/Api';\n\nconst People = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    try {\n      TrendPerson().then(response => {\n        setPeople(response.results);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return <PersonList person={people} />;\n};\n\nexport default People;\n","import axios from 'axios';\n\nconst API_KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\naxios.defaults.baseURL = URL;\n\nexport const GetMovies = async () => {\n  try {\n    const server = await axios.get(\n      `3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetAll = async () => {\n  try {\n    const server = await axios.get(\n      `3/trending/tv/day?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const TrendPerson = async () => {\n  try {\n    const server = await axios.get(\n      `3/trending/person/day?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const SearchMovie = async onSubmit => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?query=${onSubmit}&api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieInfo = async onSubmitId => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const TvInfo = async onSubmitId => {\n  try {\n    const server = await axios.get(\n      `3/tv/${onSubmitId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const PersonInfo = async onSubmitId => {\n  try {\n    const server = await axios.get(\n      `3/person/${onSubmitId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieCast = async onSubmitCast => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitCast}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieReviews = async onSubmitReviews => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitReviews}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["List","styled","A","Link","Item","Img","P","Container","prop","location","useLocation","person","map","id","profile_path","name","to","state","from","src","alt","width","useState","people","setPeople","useEffect","TrendPerson","then","response","results","error","console","log","API_KEY","axios","GetMovies","server","data","GetAll","SearchMovie","onSubmit","MovieInfo","onSubmitId","TvInfo","PersonInfo","MovieCast","onSubmitCast","MovieReviews","onSubmitReviews"],"sourceRoot":""}