{"version":3,"file":"static/js/779.95ca2c2a.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\naxios.defaults.baseURL = URL;\n\nexport const GetAll = async () => {\n  try {\n    const server = await axios.get(\n      `3/trending/all/day?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data.results;\n\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetMovies = async () => {\n  try {\n    const server = await axios.get(\n      `3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetTv = async () => {\n  try {\n    const server = await axios.get(\n      `3/trending/tv/day?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const TrendPerson = async () => {\n  try {\n    const server = await axios.get(\n      `3/trending/person/day?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const SearchMovie = async onSubmit => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?query=${onSubmit}&api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieInfo = async onSubmitId => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const TvInfo = async onSubmitId => {\n  try {\n    const server = await axios.get(\n      `3/tv/${onSubmitId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const PersonInfo = async onSubmitId => {\n  try {\n    const server = await axios.get(\n      `3/person/${onSubmitId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieCast = async onSubmitCast => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitCast}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieReviews = async onSubmitReviews => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitReviews}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Autor = styled.h3`\n  margin-bottom: 10px;\n  font-size: x-large;\n  font-weight: 700;\n  color: #6a6a6a;\n`;\n\nexport const AutorReview = styled.p`\n  margin-bottom: 30px;\n  border-bottom: 2px solid black;\n  font-weight: lighter;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { MovieReviews } from '../Api/Api';\nimport { Autor, AutorReview } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [result, setReesult] = useState(false);\n  const params = useParams();\n\n  useEffect(() => {\n    try {\n      MovieReviews(params.filmId).then(response => {\n        if (response.total_results === 0) {\n          return setReesult(true);\n        }\n        setReviews(response.results);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [params.filmId]);\n\n  return (\n    <div>\n      {result && <p>Review not written yet</p>}\n      <ul>\n        {reviews &&\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <Autor>{author}</Autor>\n              <AutorReview>{content}</AutorReview>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","GetMovies","server","data","results","console","error","GetTv","TrendPerson","SearchMovie","onSubmit","MovieInfo","onSubmitId","TvInfo","PersonInfo","MovieCast","onSubmitCast","MovieReviews","onSubmitReviews","Autor","styled","AutorReview","useState","reviews","setReviews","result","setReesult","params","useParams","useEffect","filmId","then","response","total_results","log","map","id","author","content"],"sourceRoot":""}